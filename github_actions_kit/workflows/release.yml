name: 🚀 Release Automation

on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    name: 📦 Create Release
    runs-on: ubuntu-latest
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4

    - name: 📋 Generate release notes
      id: generate_notes
      run: |
        # Get the latest tag
        LATEST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "v0.0.0")
        
        # Generate changelog
        echo "## 🚀 What's New" > release_notes.md
        echo "" >> release_notes.md
        
        # Get commits since last tag
        if [ "$LATEST_TAG" != "$(git describe --tags --exact-match 2>/dev/null)" ]; then
          git log ${LATEST_TAG}..HEAD --pretty=format:"- %s" --no-merges >> release_notes.md
        else
          echo "- Initial release" >> release_notes.md
        fi
        
        echo "" >> release_notes.md
        echo "## 🤖 Agent Profiles" >> release_notes.md
        echo "This release includes the following agent personalities:" >> release_notes.md
        
        # List available profiles
        for profile in AGENT_Profiles/*.json; do
          if [ -f "$profile" ]; then
            name=$(basename "$profile" .json)
            echo "- **${name//_/ }**: Ready-to-use personality configuration" >> release_notes.md
          fi
        done

    - name: 🏷️ Create GitHub Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: GitTalker ${{ github.ref }}
        body_path: release_notes.md
        draft: false
        prerelease: false

  docker:
    name: 🐳 Build Docker Image
    runs-on: ubuntu-latest
    needs: release
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4

    - name: 🐳 Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: 🔐 Login to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: 📦 Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ghcr.io/${{ github.repository }}
        tags: |
          type=ref,event=tag
          type=raw,value=latest

    - name: 🏗️ Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max